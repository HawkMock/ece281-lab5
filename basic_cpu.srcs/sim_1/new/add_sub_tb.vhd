----------------------------------------------------------------------------------
-- Testbench for add_sub module, generated by ChatGPT
----------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;  -- For handling numeric operations

ENTITY add_sub_tb IS
END add_sub_tb;

ARCHITECTURE behavior OF add_sub_tb IS

    -- Component Declaration for the Unit Under Test (UUT)
    COMPONENT add_sub
    PORT(
         i_A : IN  std_logic_vector(7 downto 0);
         i_B : IN  std_logic_vector(7 downto 0);
         i_alu_ctrl : IN  std_logic_vector(1 downto 0);
         o_result : OUT  std_logic_vector(7 downto 0);
         o_carry : OUT  std_logic;
         o_overflow : OUT  std_logic;
         o_negative : OUT  std_logic;
         o_zero : OUT  std_logic
        );
    END COMPONENT;

   --Inputs
   signal i_A : std_logic_vector(7 downto 0) := (others => '0');
   signal i_B : std_logic_vector(7 downto 0) := (others => '0');
   signal i_alu_ctrl : std_logic_vector(1 downto 0) := (others => '0');

   --Outputs
   signal o_result : std_logic_vector(7 downto 0);
   signal o_carry : std_logic;
   signal o_overflow : std_logic;
   signal o_negative : std_logic;
   signal o_zero : std_logic;

   -- Clock generation
   constant clk_period : time := 10 ns;
   signal clk : std_logic := '0';
   begin
        clk <= not clk after clk_period / 2;

    -- Instantiate the Unit Under Test (UUT)
    uut: add_sub PORT MAP (
          i_A => i_A,
          i_B => i_B,
          i_alu_ctrl => i_alu_ctrl,
          o_result => o_result,
          o_carry => o_carry,
          o_overflow => o_overflow,
          o_negative => o_negative,
          o_zero => o_zero
        );

    -- Stimulus process
    stim_proc: process
    begin        
        -- Initialize Inputs
        i_A <= "00000001";
        i_B <= "00000001";
        i_alu_ctrl <= "10"; -- Test addition
        wait for 100 ns;
        
        i_A <= "00000011";
        i_B <= "00000001";
        i_alu_ctrl <= "10"; -- Test addition
        wait for 100 ns;
        
        i_A <= "11111011";
        i_B <= "11111101";
        i_alu_ctrl <= "11"; -- Test subtraction
        wait for 100 ns;

        i_A <= "00001111";
        i_B <= "00000011";
        i_alu_ctrl <= "11"; -- Test subtraction
        wait for 100 ns;

        i_A <= "10000000";
        i_B <= "11111111";
        i_alu_ctrl <= "10"; -- Test addition with overflow
        wait for 100 ns;

        -- Wait for a while and then finish simulation
        wait for 100 ns;
        wait;
    end process;

END behavior;